
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'company_name'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'company_name'

packages:
  - git: ""
    revision: 0.1

vars:
  'dbt_date:time_zone': 'America/Los_Angeles'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

seeds:
  company_name:
    employees:
      +schema: company_name_mongodb_changelog_data

models:
  company_name:
    +persist_docs:
      relation: true
      columns: true
    # Config indicated by + and applies to all files under models/example/

    mongodb_changelog_data:
      +schema: mongodb_changelog_data
      +materialized: table
    
    changelog_extracted_data:
      +schema: changelog_extracted_data
      +materialized: table
    
    latest_data:
      +schema: latest_data
      +materialized: table
    
    facts:
      +schema: facts
      +materialized: table
    
    dimensions:
      +schema: dimensions
      +materialized: table
    
    reporting_layer:
      +schema: reporting_layer
      +materialized: table

    

      


      